import React, { useState, useEffect } from 'react';
import { Customer, Vehicle } from '../../types';
import { CustomerForm } from './CustomerForm';
import { VehicleForm } from '../vehicles/VehicleForm';
import { Plus, X } from 'lucide-react';

interface CustomerModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSave: (customer: Omit<Customer, 'id'>) => void;
  initialData?: Customer;
}

export function CustomerModal({ isOpen, onClose, onSave, initialData }: CustomerModalProps) {
  const [formData, setFormData] = useState(() => ({
    name: initialData?.name || '',
    email: initialData?.email || '',
    phone: initialData?.phone || '',
  }));

  const [vehicles, setVehicles] = useState<Omit<Vehicle, 'id' | 'customerId'>[]>(() =>
    initialData?.vehicles.map(v => ({
      make: v.make,
      model: v.model,
      year: v.year,
      plate: v.plate,
      color: v.color,
    })) || []
  );

  useEffect(() => {
    if (initialData) {
      setFormData({
        name: initialData.name,
        email: initialData.email,
        phone: initialData.phone,
      });
      setVehicles(
        initialData.vehicles.map(v => ({
          make: v.make,
          model: v.model,
          year: v.year,
          plate: v.plate,
          color: v.color,
        }))
      );
    } else {
      setFormData({
        name: '',
        email: '',
        phone: '',
      });
      setVehicles([]);
    }
  }, [initialData]);

  if (!isOpen) return null;

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSave({
      ...formData,
      vehicles: vehicles.map(v => ({
        ...v,
        id: '', // This will be generated by the backend
        customerId: '', // This will be set by the backend
      })),
    });
    onClose();
  };

  const addVehicle = () => {
    setVehicles([...vehicles, {
      make: '',
      model: '',
      year: '',
      plate: '',
      color: '',
    }]);
  };

  const removeVehicle = (index: number) => {
    setVehicles(vehicles.filter((_, i) => i !== index));
  };

  const updateVehicle = (index: number, vehicleData: Omit<Vehicle, 'id' | 'customerId'>) => {
    setVehicles(vehicles.map((v, i) => i === index ? vehicleData : v));
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
      <div className="bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        <h2 className="text-xl font-bold mb-4">
          {initialData ? 'Editar Cliente' : 'Novo Cliente'}
        </h2>
        
        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="space-y-4">
            <h3 className="text-lg font-medium">Dados do Cliente</h3>
            <CustomerForm formData={formData} setFormData={setFormData} />
          </div>

          <div className="space-y-4">
            <div className="flex justify-between items-center">
              <h3 className="text-lg font-medium">Veículos</h3>
              <button
                type="button"
                onClick={addVehicle}
                className="flex items-center space-x-1 text-sm text-blue-600 hover:text-blue-700"
              >
                <Plus className="w-4 h-4" />
                <span>Adicionar Veículo</span>
              </button>
            </div>

            {vehicles.map((vehicle, index) => (
              <div key={index} className="relative border rounded-lg p-4">
                <button
                  type="button"
                  onClick={() => removeVehicle(index)}
                  className="absolute top-2 right-2 text-gray-400 hover:text-red-500"
                >
                  <X className="w-4 h-4" />
                </button>
                <VehicleForm
                  formData={vehicle}
                  setFormData={(data) => updateVehicle(index, data)}
                />
              </div>
            ))}

            {vehicles.length === 0 && (
              <p className="text-gray-500 text-center py-4">
                Nenhum veículo cadastrado. Clique em "Adicionar Veículo" para começar.
              </p>
            )}
          </div>
          
          <div className="flex justify-end space-x-3 mt-6">
            <button
              type="button"
              onClick={onClose}
              className="px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 border border-gray-300 rounded-md"
            >
              Cancelar
            </button>
            <button
              type="submit"
              className="px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md"
            >
              Salvar
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}